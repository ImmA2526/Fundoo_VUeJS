{"remainingRequest":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\src\\components\\Create.vue?vue&type=template&id=3d9b692c&scoped=true&","dependencies":[{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\src\\components\\Create.vue","mtime":1612269367397},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}