{"remainingRequest":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\src\\Pages\\LoginPage.vue?vue&type=style&index=0&id=618cb384&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\src\\Pages\\LoginPage.vue","mtime":1611924707108},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5oMiB7DQogIHBhZGRpbmctYm90dG9tOiAxMHB4Ow0KICBtYXJnaW4tdG9wOiAxcHg7DQogIHBhZGRpbmctdG9wOiA2cHg7DQogIGZvbnQtZmFtaWx5OiBDYW1icmlhLCBDb2NoaW4sIEdlb3JnaWEsIFRpbWVzLCAiVGltZXMgTmV3IFJvbWFuIiwgc2VyaWY7DQogIGNvbG9yOiByZ2IoMjUyLCAyNDgsIDYpOw0KICBwYWRkaW5nLWJvdHRvbTogMTBweDsNCiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7DQogIGJvcmRlci1yYWRpdXM6IDE0cHg7DQp9DQoNCiNoMiB7DQogIGNvbG9yOiB3aGl0ZTsNCn0NCg0KLmJsYW5rIHsNCiAgcGFkZGluZy1ib3R0b206IDZweDsNCiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7DQogIGJvcmRlci1yYWRpdXM6IDIwcHg7DQp9DQoubWQtcHJvZ3Jlc3MtYmFyIHsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICB0b3A6IDA7DQogIHJpZ2h0OiAwOw0KICBsZWZ0OiAwOw0KfQ0KLm1kLWNhcmQgew0KICBtYXJnaW4tbGVmdDogNDAwcHg7DQogIG1hcmdpbi10b3A6IDE1MHB4Ow0KfQ0K"},{"version":3,"sources":["LoginPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LoginPage.vue","sourceRoot":"src/Pages","sourcesContent":["<template>\r\n  <div>\r\n    <form novalidate class=\"md-layout\" @submit.prevent=\"validateUser\">\r\n      <md-card class=\"md-layout-item md-size-50 md-small-size-100\">\r\n        <center>\r\n          <div class=\"h2\">\r\n            <h2 id=\"h2\">Fundoo Notes</h2>\r\n            <h3>Login</h3>\r\n          </div>\r\n        </center>\r\n\r\n        <md-card-content>\r\n          <md-field :class=\"getValidationClass('email')\">\r\n            <label for=\"email\">Email</label>\r\n            <md-input type=\"email\" name=\"email\" id=\"email\" autocomplete=\"email\" v-model=\"form.email\" :disabled=\"sending\"/>\r\n            <span class=\"md-error\" v-if=\"!$v.form.email.required\">The email is required</span>\r\n            <span class=\"md-error\" v-else-if=\"!$v.form.email.email\">Invalid email</span>\r\n          </md-field>\r\n          <md-field :class=\"getValidationClass('password')\">\r\n            <label for=\"password\">Password</label>\r\n            <md-input type=\"password\" name=\"password\" id=\"password\" autocomplete=\"password\" v-model=\"form.password\" :disabled=\"sending\"/>\r\n            <span class=\"md-error\" v-if=\"!$v.form.password.required\">The password is required</span>\r\n            <span class=\"md-error\" v-else-if=\"!$v.form.password.minlength\">Invalid password</span>\r\n          </md-field>\r\n\r\n          <md-button to=\"./Forgot\" class=\"md-primary\">Forgot Password?</md-button>\r\n        </md-card-content>\r\n\r\n        <md-progress-bar md-mode=\"indeterminate\" v-if=\"sending\" />\r\n\r\n        <md-card-actions>\r\n          <div class=\"md-layout md-gutter\">\r\n            <div class=\"md-layout-item md-small-size-100\">\r\n              <md-button to=\"./Register\" class=\"md-primary\" :disabled=\"sending\">Create Account</md-button>\r\n              <!-- <md-button  type=\"submit\" class=\"md-primary\" >Create account</md-button> -->\r\n            </div>\r\n            <div class=\"md-layout-item md-small-size-100\">\r\n              <md-button v-on:click=\"loginPost()\" type=\"submit\" class=\"md-dense md-raised md-primary\" :disabled=\"sending\">Login</md-button>\r\n            </div>\r\n          </div>\r\n        </md-card-actions>\r\n        <div class=\"blank\"></div>\r\n      </md-card>\r\n      <md-snackbar :md-active.sync=\"userSaved\">The user {{ loginUser }} successfully login!</md-snackbar>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import axios from 'axios'\r\nimport userService from \"../Services/userService\";\r\nimport { validationMixin } from \"vuelidate\";\r\nimport { required, email, minLength } from \"vuelidate/lib/validators\";\r\n\r\nexport default {\r\n  name: \"FormValidation\",\r\n  mixins: [validationMixin],\r\n  data: () => ({\r\n    form: {\r\n      email: null,\r\n      password: null,\r\n    },\r\n    userSaved: false,\r\n    sending: false,\r\n    loginUser: true,\r\n  }),\r\n  validations: {\r\n    form: {\r\n      email: {\r\n        required,\r\n        email,\r\n      },\r\n      password: {\r\n        required,\r\n        minLength: minLength(6),\r\n      },\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    getValidationClass(fieldName) {\r\n      const field = this.$v.form[fieldName];\r\n      if (field) {\r\n        return {\r\n          \"md-invalid\": field.$invalid && field.$dirty,\r\n        };\r\n      }\r\n    },\r\n\r\n    // loginUser\r\n    loginPost() {\r\n      const userData = {\r\n        email: this.form.email,\r\n        password: this.form.password,\r\n        cartId: \"\",\r\n      };\r\n      userService\r\n        .login(userData)\r\n        .then(function (data) {\r\n          localStorage.setItem(\"AccessToken\", data.data.id);\r\n\r\n          //  setTimeout(()=>  this.$router.push(\"/home\"), 2000)\r\n          this.$router.push(\"/home\");\r\n          console.log(data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    },\r\n\r\n    // post:function(){\r\n    //   this.$http.post('http://fundoonotes.incubation.bridgelabz.com/api/user/login',{\r\n    //     email:this.form.email,\r\n    //     password:this.form.password,\r\n    //     cartId:''\r\n\r\n    //   }).then(function(data){\r\n    //     localStorage.setItem('AccessToken','DSoQA8I4YhzwZLRLhxrp2Eo6Ps48dA839klUHiKYkoPbXDX5D2TkoTXhsl0uEBbm')\r\n    //     this.$router.push(\"/home\")\r\n    //     console.log(data);\r\n    //   }).catch();\r\n    // },\r\n\r\n    clearForm() {\r\n      this.$v.$reset();\r\n      this.form.email = null;\r\n      this.form.password = null;\r\n    },\r\n    saveUser() {\r\n      this.sending = true;\r\n\r\n      // Instead of this timeout, here you can call your API\r\n      window.setTimeout(() => {\r\n        this.loginUser = `${this.form.email} `;\r\n        this.userSaved = true;\r\n        this.sending = false;\r\n        this.clearForm();\r\n      }, 1500);\r\n    },\r\n    validateUser() {\r\n      this.$v.$touch();\r\n      if (!this.$v.$invalid) {\r\n        this.saveUser();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.h2 {\r\n  padding-bottom: 10px;\r\n  margin-top: 1px;\r\n  padding-top: 6px;\r\n  font-family: Cambria, Cochin, Georgia, Times, \"Times New Roman\", serif;\r\n  color: rgb(252, 248, 6);\r\n  padding-bottom: 10px;\r\n  background-color: black;\r\n  border-radius: 14px;\r\n}\r\n\r\n#h2 {\r\n  color: white;\r\n}\r\n\r\n.blank {\r\n  padding-bottom: 6px;\r\n  background-color: black;\r\n  border-radius: 20px;\r\n}\r\n.md-progress-bar {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n}\r\n.md-card {\r\n  margin-left: 400px;\r\n  margin-top: 150px;\r\n}\r\n</style>"]}]}