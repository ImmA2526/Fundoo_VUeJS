{"remainingRequest":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\src\\components\\ResetPage.vue?vue&type=style&index=0&id=85118504&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\src\\components\\ResetPage.vue","mtime":1611398235698},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\imran\\Desktop\\VUeJs\\fundoo_project\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi8vIC5tZC1wcm9ncmVzcy1iYXIgew0KLy8gICBwb3NpdGlvbjogYWJzb2x1dGU7DQovLyAgIHRvcDogMDsNCi8vICAgcmlnaHQ6IDA7DQovLyAgIGxlZnQ6IDA7DQovLyB9DQoubWQtY2FyZCB7DQogIG1hcmdpbi1sZWZ0OiA0MDBweDsNCiAgbWFyZ2luLXRvcDogMTUwcHg7DQp9DQoubWQtY2FyZC1oZWFkZXIgew0KICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIGZvbnQtc2l6ZTogMTUwJTsNCn0NCi5tZC1jYXJkLW1lZGlhIHsNCiAgbWFyZ2luLXRvcDogOXB4Ow0KICB3aWR0aDogMzAwcHg7DQogIGhlaWdodDogMzAwcHg7DQp9DQoubWQtY2FyZC1jb250ZW50IHsNCiAgdGV4dC1hbGlnbjogbGVmdDsNCiAgZm9udC1zaXplOiAxNTAlOw0KfQ0K"},{"version":3,"sources":["ResetPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ResetPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <form novalidate class=\"md-layout\" @submit.prevent=\"validateUser\">\r\n      <md-card class=\"md-layout-item md-size-50 md-small-size-100\">\r\n        <md-card-header>\r\n          <div class=\"md-title\">\r\n            <span style=\"color:blue\">F</span>\r\n            <span style=\"color:red\">u</span>\r\n            <span style=\"color:yellow\">n</span>\r\n            <span style=\"color:blue\">d</span>\r\n            <span style=\"color:green\">o</span>\r\n            <span style=\"color:red\">o</span>\r\n          </div> \r\n          <div class=\"md-title\">Forgot Password</div>\r\n        </md-card-header>\r\n\r\n        <md-card-content>\r\n          <md-field :class=\"getValidationClass('email')\">\r\n            <label for=\"email\">Email</label>\r\n            <md-input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              autocomplete=\"email\"\r\n              v-model=\"form.email\"\r\n              :disabled=\"sending\"\r\n            />\r\n            <span class=\"md-error\" v-if=\"!$v.form.email.required\">The email is required</span>\r\n            <span class=\"md-error\" v-else-if=\"!$v.form.email.email\">Invalid email</span>\r\n          </md-field>\r\n        </md-card-content>\r\n\r\n        <md-progress-bar md-mode=\"indeterminate\" v-if=\"sending\" />\r\n\r\n        <md-card-actions>\r\n          <md-button type=\"submit\" class=\"md-dense md-raised md-primary\" :disabled=\"sending\">Next</md-button>\r\n        </md-card-actions>\r\n      </md-card>\r\n\r\n      <md-snackbar :md-active.sync=\"userSaved\">The user {{ loginUser }} successfully login!</md-snackbar>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { validationMixin } from \"vuelidate\";\r\nimport { required, email } from \"vuelidate/lib/validators\";\r\nexport default {\r\n  name: \"FormValidation\",\r\n  mixins: [validationMixin],\r\n  data: () => ({\r\n    form: {\r\n      email: null\r\n    },\r\n    userSaved: false,\r\n    sending: false\r\n  }),\r\n  validations: {\r\n    form: {\r\n      email: {\r\n        required,\r\n        email\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    getValidationClass(fieldName) {\r\n      const field = this.$v.form[fieldName];\r\n      if (field) {\r\n        return {\r\n          \"md-invalid\": field.$invalid && field.$dirty\r\n        };\r\n      }\r\n    },\r\n    clearForm() {\r\n      this.$v.$reset();\r\n      this.form.email = null;\r\n    },\r\n    saveUser() {\r\n      this.sending = true;\r\n      // Instead of this timeout, here you can call your API\r\n      window.setTimeout(() => {\r\n        this.loginUser = `${this.form.email} `;\r\n        this.userSaved = true;\r\n        this.sending = false;\r\n        this.clearForm();\r\n      }, 1500);\r\n    },\r\n    validateUser() {\r\n      this.$v.$touch();\r\n      if (!this.$v.$invalid) {\r\n        this.saveUser();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n// .md-progress-bar {\r\n//   position: absolute;\r\n//   top: 0;\r\n//   right: 0;\r\n//   left: 0;\r\n// }\r\n.md-card {\r\n  margin-left: 400px;\r\n  margin-top: 150px;\r\n}\r\n.md-card-header {\r\n  text-align: center;\r\n  font-size: 150%;\r\n}\r\n.md-card-media {\r\n  margin-top: 9px;\r\n  width: 300px;\r\n  height: 300px;\r\n}\r\n.md-card-content {\r\n  text-align: left;\r\n  font-size: 150%;\r\n}\r\n</style>"]}]}